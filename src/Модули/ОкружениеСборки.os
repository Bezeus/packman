#Использовать v8runner
#Использовать strings

Перем мРабочийКаталогСборки;

// Возвращает значение рабочего каталога, глобальное для всех шагов сборки
//
Функция РабочийКаталог() Экспорт
    
    Если мРабочийКаталогСборки = Неопределено Тогда
        
        Переменная = ПолучитьПеременнуюСреды(ИмяПеременнойОкруженияКаталогСборки());
        Если Не ПустаяСтрока(Переменная) Тогда
            мРабочийКаталогСборки = Переменная;
        Иначе
            мРабочийКаталогСборки = ОбъединитьПути(ТекущийКаталог(), ".packman");
        КонецЕсли;
    КонецЕсли;
    
    Возврат мРабочийКаталогСборки;
    
КонецФункции // РабочийКаталог() Экспорт

// Получает конфигуратор, настроенный на рабочий каталог и временную базу
//
Функция ПолучитьКонфигуратор() Экспорт
    
    УК = Новый УправлениеКонфигуратором();
    УК.КаталогСборки(РабочийКаталог());
    
    Возврат УК;
    
КонецФункции

Функция ИмяПеременнойОкруженияКаталогСборки() Экспорт
    Возврат "VPACKMAN_WORKDIR";
КонецФункции

Функция ИмяКаталогаФормированияДистрибутива() Экспорт
    Возврат "distr";
КонецФункции

Функция ИмяФайлаИнформацииОМетаданных() Экспорт
    Возврат "v8-metadata.info";
КонецФункции // ИмяФайлаИнформацииОМетаданных()

Функция ПрочитатьИнформациюОМетаданных(Знач ИмяФайла) Экспорт
    
    Результат = Новый Структура();
    ЧтениеТекста = Новый ЧтениеТекста(ИмяФайла);
    Лог = Логирование.ПолучитьЛог(ПараметрыСистемы.ИмяЛогаСистемы());
    Лог.Отладка("Читаю информацию о метаданных");
    Пока Истина Цикл
        Стр = ЧтениеТекста.ПрочитатьСтроку();
        Если Стр = Неопределено Тогда
            Прервать;
        КонецЕсли;
        Лог.Отладка("Прочитано: " + Стр);
        Позиция = Найти(Стр, "=");
        Если Позиция = 0 Тогда
            Продолжить;
        КонецЕсли;
        
        Результат.Вставить(Лев(Стр, Позиция-1), Сред(Стр, Позиция+1));
        
    КонецЦикла;
    
    Если Не Результат.Свойство("Версия") Тогда
        ЧтениеТекста.Закрыть();
        ВызватьИсключение "Не найдено поле Версия в файле метаданных";
    КонецЕсли;
    
    ЧтениеТекста.Закрыть();

    // Предустановленное окружение
    Переменные = ПолучитьПеременнуюСреды("VPACKMAN_BUILDVARS");
    Если Переменные <> Неопределено Тогда
    	Лог.Отладка("Обнаружена переменная VPACKMAN_BUILDVARS");
		Лог.Отладка("VPACKMAN_BUILDVARS=" + Переменные);
		Строки = СтроковыеФункции.РазложитьСтрокуВМассивПодстрок(Переменные, ";");
		Для Каждого Стр Из Строки Цикл
			Лог.Отладка("Прочитано: " + Стр);
			Позиция = Найти(Стр, "=");
			Если Позиция = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Результат.Вставить(Лев(Стр, Позиция-1), Сред(Стр, Позиция+1));
		КонецЦикла;
	Иначе
		Лог.Отладка("Переменная окружения VPACKMAN_BUILDVARS не найдена");
    КонецЕсли;
    
    Возврат Результат;
    
КонецФункции // ПрочитатьИнформациюОМетаданных()

Функция ОпределитьСтандартноеИмяКаталогаШаблона(Знач ИнформацияОМетаданных) Экспорт
	
	Перем ВерсияМетаданных;
	Перем НомерКоммита;
	Перем НомерСборкиСервера;

	ВерсияМетаданных = ИнформацияОМетаданных.Версия;
	ИнформацияОМетаданных.Свойство("НомерВерсииХранилища", НомерКоммита);
	ИнформацияОМетаданных.Свойство("НомерСборкиСервера", НомерСборкиСервера);
	
	Возврат ВерсияМетаданных + НеобязательныйСуффикс("-", НомерКоммита) + НеобязательныйСуффикс(".", НомерСборкиСервера);

КонецФункции // ОпределитьСтандартноеИмяКаталогаШаблона()

Функция НеобязательныйСуффикс(Знач Разделитель, Знач Значение)
	Если Не ПустаяСтрока(Значение) Тогда
		Возврат Разделитель + Значение;
	КонецЕсли;

	Возврат "";
КонецФункции