
Перем Лог;

///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт
	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды, "Создание файлов поставки (cf и cfu)");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-cfu-basedir", "Каталог предыдущих версий для создания CFU (опционально)");
    Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-update-from", "Перечень версий, через запятую, включаемых в обновление (опционально)");
КонецПроцедуры

// Выполняет логику команды
// 
// Параметры:
//   ПараметрыКоманды - Соответствие ключей командной строки и их значений
//
Функция ВыполнитьКоманду(Знач ПараметрыКоманды) Экспорт
    ВызватьИсключение "Не реализовано"
КонецФункции

Функция СоздатьФайлыКонфигурацииПоставщика(Знач УправлениеКонфигуратором, Знач ПараметрыКоманды) Экспорт
    ИмяФайлаПоставки = УправлениеКонфигуратором.КаталогСборки() + "\1cv8.cf";
	Параметры = УправлениеКонфигуратором.ПолучитьПараметрыЗапуска();
	Параметры.Добавить("/CreateDistributionFiles");
	Параметры.Добавить("-cffile """+ИмяФайлаПоставки+"""");
	
	ФайлыПредыдущихВерсий = НайтиФайлыПредыдущихВерсий(ПараметрыКоманды.КаталогВерсий, ПараметрыКоманды.ПредыдущиеВерсии);
	Если ФайлыПредыдущихВерсий <> Неопределено Тогда
		ИмяФайлаОбновления = УправлениеКонфигуратором.КаталогСборки() + "\1cv8.cfu";
		Параметры.Добавить("-cfufile """+ИмяФайлаОбновления+"""");
		
		Для Каждого ФайлПредыдущейВерсии Из ФайлыПредыдущихВерсий Цикл
			Лог.Информация("Добавляю обновление из файла: " + ФайлПредыдущейВерсии.ПолноеИмя);
			Параметры.Добавить("-f """ + ФайлПредыдущейВерсии.ПолноеИмя + """");
		КонецЦикла;
		
	КонецЕсли;
	
	УправлениеКонфигуратором.ВыполнитьКоманду(Параметры);
	Сообщить(УправлениеКонфигуратором.ВыводКоманды());
    
    Возврат Новый Структура("ИмяФайлаПоставки,ИмяФайлаОбновления", ИмяФайлаПоставки, ИмяФайлаОбновления);
    
КонецФункции // СоздатьФайлыКонфигурацииПоставщика()

Функция НайтиФайлыПредыдущихВерсий(Знач КаталогПредыдущихВерсий, Знач ВерсииОбновления)
	
	Если КаталогПредыдущихВерсий = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Каталог = Новый Файл(КаталогПредыдущихВерсий);
	Если Не Каталог.Существует() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ФайлыКонфигураций = Новый Массив;
	
	Для Каждого Версия Из ВерсииОбновления Цикл
		КаталогВерсии = Новый Файл(ОбъединитьПути(КаталогПредыдущихВерсий, Версия));
		Если Не КаталогВерсии.Существует() Тогда
			Текст = СтрШаблон("Каталог версии %1 не найден", КаталогВерсии.ПолноеИмя);
			Лог.Ошибка(Текст);
			ВызватьИсключение Текст;
		КонецЕсли;
		
		ФайлыКонфигурацийВерсии = НайтиФайлы(КаталогВерсии, "*.cf", Истина);
		Для Каждого ФайлВерсии Из ФайлыКонфигурацийВерсии Цикл
			ФайлыКонфигураций.Добавить(ФайлВерсии);
		КонецЦикла;
	КонецЦикла;
	
	Если ФайлыКонфигураций.Количество() Тогда
		Возврат ФайлыКонфигураций;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция РазобратьПараметры(Знач ПараметрыКоманды) Экспорт
    
    Результат = Новый Структура;
    
    Если ПустаяСтрока(ПараметрыКоманды["КаталогСборки"]) Тогда
        ВызватьИсключение "Не задан каталог сборки";
    КонецЕсли;
    
    Если ПустаяСтрока(ПараметрыКоманды["АдресХранилища"]) Тогда
        ВызватьИсключение "Не задан адрес хранилища";
    КонецЕсли;
    
    Если ПустаяСтрока(ПараметрыКоманды["ВерсияКонфигурации"]) Тогда
        ВызватьИсключение "Не задана версия конфигурации";
    КонецЕсли;
    
    Если ПустаяСтрока(ПараметрыКоманды["ФайлМанифеста"]) Тогда
        ВызватьИсключение "Не задан путь к манифесту сборки (*.edf)";
    КонецЕсли;
    
    Результат.Вставить("КаталогСборки", ПараметрыКоманды["КаталогСборки"]);
    Результат.Вставить("АдресХранилища", ПараметрыКоманды["АдресХранилища"]);
    Результат.Вставить("ВерсияКонфигурации", ПараметрыКоманды["ВерсияКонфигурации"]);
    Результат.Вставить("ПользовательХранилища", ПараметрыКоманды["-storage-user"]);
    Результат.Вставить("ПарольХранилища", ПараметрыКоманды["-storage-pwd"]);
    Результат.Вставить("ВерсияХранилища", ПараметрыКоманды["-storage-v"]);
    Результат.Вставить("КаталогВерсий", ПараметрыКоманды["-cfu-basedir"]);
    Результат.Вставить("ФайлМанифеста", ПараметрыКоманды["ФайлМанифеста"]);
    Результат.Вставить("СобиратьИнсталлятор", ПараметрыКоманды["-setup"]);
    Результат.Вставить("СобиратьФайлыПоставки", ПараметрыКоманды["-files"]);
    
    МассивВерсий = СтроковыеФункции.РазложитьСтрокуВМассивПодстрок(
        Строка(ПараметрыКоманды["-update-from"]),
        ",",
        Ложь,
        Истина);
    
    Результат.Вставить("ПредыдущиеВерсии", МассивВерсий);
    
    
    Возврат Результат;
    
КонецФункции

//////////////////////////////////////////////////////////////////////////
//

Лог = Логирование.ПолучитьЛог(ПараметрыСистемы.ИмяЛогаСистемы());