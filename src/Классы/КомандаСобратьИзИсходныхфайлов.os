#Использовать logos

Перем Лог;

///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт
	
	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды, "Сборка cf из исходников");
	Парсер.ДобавитьПозиционныйПараметрКоманды(ОписаниеКоманды, "src", "Каталог исходников");
    Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-v8version", "Версия платформы для загрузки исходников");
    Парсер.ДобавитьКоманду(ОписаниеКоманды);

КонецПроцедуры

// Выполняет логику команды
// 
// Параметры:
//   ПараметрыКоманды - Соответствие ключей командной строки и их значений
//
Функция ВыполнитьКоманду(Знач ПараметрыКоманды) Экспорт
    
	Каталог = ПараметрыКоманды["src"];
    Версия  = ПараметрыКоманды["-v8version"];

    СобратьИзИсходниковТекущуюКонфигурацию(Каталог, Версия);

КонецФункции

Процедура СобратьИзИсходниковТекущуюКонфигурацию(Знач ВходнойКаталог, Знач ВерсияПлатформы = "") 
	
	КаталогВыгрузки = Новый Файл(ВходнойКаталог); 
	Если КаталогВыгрузки.Существует() = Ложь Тогда
		ВызватьИсключение СтроковыеФункции.ПодставитьПараметрыВСтроку("Каталог исходников %1 не найден", КаталогВыгрузки.ПолноеИмя);
	КонецЕсли;
    
	Конфигуратор = ОкружениеСборки.ПолучитьКонфигуратор();
		
	Если Не ПустаяСтрока(ВерсияПлатформы) Тогда 
		Конфигуратор.ИспользоватьВерсиюПлатформы(ВерсияПлатформы);
	КонецЕсли;
	
	ПараметрыЗапуска = Конфигуратор.ПолучитьПараметрыЗапуска();
	ПараметрыЗапуска.Добавить("/Visible");
	ПараметрыЗапуска.Добавить("/LoadConfigFromFiles """ + ВходнойКаталог + """");
    Конфигуратор.ВыполнитьКоманду(ПараметрыЗапуска);
    Лог.Информация("Загрузка исходников выполнена." + Конфигуратор.ВыводКоманды());
	Конфигуратор.ОбновитьКонфигурациюБазыДанных();
	Лог.Информация(Конфигуратор.ВыводКоманды() + "
	|Конфигурация базы данных обновлена");
    
КонецПроцедуры

Лог = Логирование.ПолучитьЛог(ПараметрыСистемы.ИмяЛогаСистемы());